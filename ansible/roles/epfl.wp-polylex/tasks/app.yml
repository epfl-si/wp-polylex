- name: ServiceAccount
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: '{{ app_name }}'
        namespace: '{{ openshift_namespace }}'
      imagePullSecrets:
        - name: '{{ app_name }}-pull-secret'

- name: Service
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: '{{ app_name }}'
        namespace: '{{ openshift_namespace }}'
      spec:
        type: ClusterIP
        ports:
          - name: '80'
            port: 80
            targetPort: 3000
        selector:
          app: '{{ app_name }}'

- name: Deployment
  kubernetes.core.k8s:
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: '{{ app_name }}'
        namespace: '{{ openshift_namespace }}'
        labels:
          app.kubernetes.io/name: '{{ app_name }}'
          app.kubernetes.io/managed-by: 'ansible'
          app.kubernetes.io/version: '{{ tag }}'
        annotations:
          app.openshift.io/vcs-uri: 'https://github.com/epfl-si/wp-polylex/'
      spec:
        replicas: >-
          {{ 2 if inventory_environment == 'prod' else 1 }}
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxUnavailable: 1
        selector:
          matchLabels:
            app: '{{ app_name }}'
        template:
          metadata:
            labels:
              app: '{{ app_name }}'
          spec:
            serviceAccountName: '{{ app_name }}'
            affinity:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        app: '{{ app_name }}'
                    topologyKey: kubernetes.io/hostname
            containers:
              - name: '{{ app_name }}'
                image: '{{ quay_registry }}/{{ app_name }}:{{ tag }}'
                ports:
                  - containerPort: 3000
                env:
                  - name: ROOT_URL
                    value: 'https://{{ route.host }}'
                  - name: DEBUG
                    value: >-
                      {{ '-' if inventory_environment == 'prod' else '*' }}
                  - name: PORT
                    value: '3000'
                envFrom:
                  - secretRef:
                      name: '{{ app_name }}'
                resources:
                  requests:
                    cpu: 10m
                    memory: >-
                      {{ '256Mi' if inventory_environment == 'prod' else '128Mi' }}
                  limits:
                    memory: >-
                      {{ '256Mi' if inventory_environment == 'prod' else '128Mi' }}
